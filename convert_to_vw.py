import re
import os

def convert_css_to_vw_vh(css_content, base_width=1920, base_height=1080):
    """
    –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç CSS —Ä–∞–∑–º–µ—Ä—ã –≤ vw/vh –¥–ª—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏
    base_width - –±–∞–∑–æ–≤–∞—è —à–∏—Ä–∏–Ω–∞ —ç–∫—Ä–∞–Ω–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1920px)
    base_height - –±–∞–∑–æ–≤–∞—è –≤—ã—Å–æ—Ç–∞ —ç–∫—Ä–∞–Ω–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1080px)
    """
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤
    patterns = [
        # px –≤ vw (—à–∏—Ä–∏–Ω–∞)
        (r'(\d+(?:\.\d+)?)px', 'px_to_vw'),
        # px –≤ vh (–≤—ã—Å–æ—Ç–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤)
        (r'(height|min-height|max-height|top|bottom|margin-top|margin-bottom|padding-top|padding-bottom):\s*(\d+(?:\.\d+)?)px', 'px_to_vh'),
        # rem –≤ vw
        (r'(\d+(?:\.\d+)?)rem', 'rem_to_vw'),
        # em –≤ vw
        (r'(\d+(?:\.\d+)?)em', 'em_to_vw'),
    ]
    
    converted_css = css_content
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º px –≤ vw –¥–ª—è –æ–±—â–∏—Ö —Å–ª—É—á–∞–µ–≤
    def px_to_vw(match):
        px_value = float(match.group(1))
        vw_value = (px_value / base_width) * 100
        return f"{vw_value:.4f}vw"
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º px –≤ vh –¥–ª—è –≤—ã—Å–æ—Ç–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤
    def px_to_vh(match):
        property_name = match.group(1)
        px_value = float(match.group(2))
        vh_value = (px_value / base_height) * 100
        return f"{property_name}: {vh_value:.4f}vh"
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º rem –≤ vw
    def rem_to_vw(match):
        rem_value = float(match.group(1))
        # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ 1rem = 16px
        px_value = rem_value * 16
        vw_value = (px_value / base_width) * 100
        return f"{vw_value:.4f}vw"
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º em –≤ vw
    def em_to_vw(match):
        em_value = float(match.group(1))
        # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ 1em = 16px
        px_value = em_value * 16
        vw_value = (px_value / base_width) * 100
        return f"{vw_value:.4f}vw"
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é
    for pattern, conversion_type in patterns:
        if conversion_type == 'px_to_vh':
            converted_css = re.sub(pattern, px_to_vh, converted_css)
        elif conversion_type == 'px_to_vw':
            converted_css = re.sub(pattern, px_to_vw, converted_css)
        elif conversion_type == 'rem_to_vw':
            converted_css = re.sub(pattern, rem_to_vw, converted_css)
        elif conversion_type == 'em_to_vw':
            converted_css = re.sub(pattern, em_to_vw, converted_css)
    
    return converted_css

def process_css_file(input_file, output_file, base_width=1920, base_height=1080):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç CSS —Ñ–∞–π–ª –∏ —Å–æ–∑–¥–∞–µ—Ç –∞–¥–∞–ø—Ç–∏–≤–Ω—É—é –≤–µ—Ä—Å–∏—é
    """
    try:
        # –ß–∏—Ç–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π CSS —Ñ–∞–π–ª
        with open(input_file, 'r', encoding='utf-8') as f:
            css_content = f.read()
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ vw/vh
        converted_css = convert_css_to_vw_vh(css_content, base_width, base_height)
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        with open(output_file, 'w', encoding='utf-8') as f:
            f.write(converted_css)
        
        print(f"‚úÖ CSS —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω!")
        print(f"üìÅ –í—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª: {input_file}")
        print(f"üìÅ –í—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª: {output_file}")
        print(f"üñ•Ô∏è  –ë–∞–∑–æ–≤–∞—è —à–∏—Ä–∏–Ω–∞: {base_width}px")
        print(f"üñ•Ô∏è  –ë–∞–∑–æ–≤–∞—è –≤—ã—Å–æ—Ç–∞: {base_height}px")
        
    except FileNotFoundError:
        print(f"‚ùå –§–∞–π–ª {input_file} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    input_css = "assets/style/style.css"
    output_css = "assets/style/style_adaptive.css"
    base_width = 1920  # –±–∞–∑–æ–≤–∞—è —à–∏—Ä–∏–Ω–∞ —ç–∫—Ä–∞–Ω–∞
    base_height = 1080  # –±–∞–∑–æ–≤–∞—è –≤—ã—Å–æ—Ç–∞ —ç–∫—Ä–∞–Ω–∞
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é
    process_css_file(input_css, output_css, base_width, base_height)
    
    print("\nüìù –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
    print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç: python convert_to_vw.py")
    print("2. –ü–æ–ª—É—á–∏—Ç–µ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π CSS —Ñ–∞–π–ª: style_adaptive.css")
    print("3. –ó–∞–º–µ–Ω–∏—Ç–µ —Å—Å—ã–ª–∫—É –≤ HTML –Ω–∞ –Ω–æ–≤—ã–π —Ñ–∞–π–ª")
    print("\nüí° –°–æ–≤–µ—Ç: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ base_width/base_height")
